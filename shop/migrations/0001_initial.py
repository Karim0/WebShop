# Generated by Django 3.1.2 on 2020-10-24 09:05

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='(максимальное число символов: 200)', max_length=200, verbose_name='Название статьи ')),
                ('short_desc', models.CharField(default='', help_text='(максимальное число символов: 250)', max_length=250, verbose_name='Краткое описание')),
                ('text', models.TextField(help_text='(максимальное число символов: неограниченно)', verbose_name='Контент статьи ')),
                ('img', models.ImageField(blank=True, default='static/Shop/images/default.png', help_text='(желательно 250Х250px)', upload_to='media/photos', verbose_name='Загрузка картинки')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата')),
            ],
            options={
                'verbose_name': 'Статья',
                'verbose_name_plural': 'Статьи',
            },
        ),
        migrations.CreateModel(
            name='Calling',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, default=None, editable=False, max_length=128, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('desc', models.TextField()),
                ('banner', models.ImageField(upload_to='banners')),
                ('banner_alt', models.CharField(default='фото', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Не указан', max_length=100, verbose_name='Имя клиента')),
                ('address', models.CharField(default='Не указан', max_length=100, verbose_name='Адресс клиента')),
                ('email', models.CharField(default='Не указан', max_length=100, verbose_name='Почта')),
                ('phone', models.CharField(default='Не указан', max_length=100, verbose_name='Телефон клиента')),
                ('del_type', models.CharField(default='Не указан', max_length=10, verbose_name='Доставка')),
                ('pay_type', models.CharField(default='Не указан', max_length=10, verbose_name='Оплата')),
                ('total_sum', models.IntegerField(default=0, verbose_name='Общая сумма заказа')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата заказа')),
                ('checked', models.CharField(choices=[('Не проверен', 'Не проверен'), ('Проверен', 'Проверен')], default='Не проверен', max_length=20, verbose_name='Статус заказа')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('desc', models.TextField()),
                ('desc_short', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ProductChar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField()),
                ('sold', models.IntegerField()),
                ('amount', models.IntegerField()),
                ('prod', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
                ('answer', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='SiteProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_name', models.CharField(help_text='(максимальное число символов: 50)', max_length=50, verbose_name='Название страницы ')),
                ('page_icon', models.ImageField(default='static/Shop/images/default.png', help_text='(видна в закладках)', upload_to='media/photos', verbose_name='Иконка страницы ')),
                ('main_logo', models.ImageField(default='static/Shop/images/default.png', help_text='(виден на главном меню)', upload_to='media/photos', verbose_name='Логотип страницы ')),
                ('home_slider_video', models.FileField(default='static/Shop/videos/home_slider_video.mp4', help_text='(желателено соотношение 8:6)', upload_to='media/videos', verbose_name='Видео на главной странице ')),
                ('phone_number', models.CharField(blank=True, help_text='(максимальное число символов: 20)', max_length=20, verbose_name='Телефон в контактах ')),
                ('instagram', models.CharField(blank=True, help_text='(максимальное число символов: 50)', max_length=50, verbose_name='Ссылка на Instagramm ')),
                ('whatsup', models.CharField(blank=True, help_text='(максимальное число символов: 50)', max_length=50, verbose_name="Ссылка на Whats'Up ")),
                ('telegram', models.CharField(blank=True, help_text='(максимальное число символов: 50)', max_length=50, verbose_name='Ссылка на Telegram ')),
                ('email', models.CharField(blank=True, help_text='(максимальное число символов: 50)', max_length=50, verbose_name='Email адресс ')),
                ('address', models.CharField(blank=True, help_text='(максимальное число символов: 50)', max_length=50, verbose_name='Адресс самовывоза ')),
                ('paylogin', models.CharField(blank=True, help_text='(максимальное число символов: 50)', max_length=50, verbose_name='Платежный логин')),
                ('paypassword', models.CharField(blank=True, help_text='(максимальное число символов: 50)', max_length=50, verbose_name='Платежный пароль')),
            ],
            options={
                'verbose_name': 'Профиль сайта',
                'verbose_name_plural': 'Профили сайта',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('desc', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.category')),
            ],
        ),
        migrations.CreateModel(
            name='ProdVal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255)),
                ('prod_char', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.productchar')),
                ('prop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.property')),
            ],
        ),
        migrations.CreateModel(
            name='ProductVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(upload_to='video')),
                ('alt', models.CharField(max_length=255)),
                ('prod', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='video')),
                ('alt', models.CharField(max_length=255)),
                ('prod', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('rate', models.IntegerField(default=0)),
                ('user_name', models.CharField(default='', max_length=255)),
                ('phone_number', models.CharField(default='', max_length=255)),
                ('pub_date', models.DateField(default=datetime.date.today)),
                ('prod', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
            ],
        ),
        migrations.AddField(
            model_name='productchar',
            name='props',
            field=models.ManyToManyField(through='shop.ProdVal', to='shop.Property'),
        ),
        migrations.AddField(
            model_name='product',
            name='subcategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.subcategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='tag',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shop.tag'),
        ),
        migrations.CreateModel(
            name='OrderPosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(default=1, verbose_name='Заказано')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.order')),
                ('product', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shop.productchar')),
            ],
        ),
        migrations.CreateModel(
            name='CartProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(default=1, verbose_name='Заказано')),
                ('cart', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.cart')),
                ('product', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.productchar')),
            ],
            options={
                'verbose_name': 'Товар в корзине',
                'verbose_name_plural': 'Товары в корзине',
            },
        ),
    ]
